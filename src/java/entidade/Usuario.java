package entidade;
// Generated 09/09/2016 09:36:48 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * Usuario generated by hbm2java
 */
@Entity
@Table(name="usuario"
    ,catalog="kemdixip_sgeda"
)
public class Usuario  implements java.io.Serializable {


     private Integer idUsuario;
     private Pessoa pessoa;
     private String login;
     private String senha;
     private Boolean ativo;
     private Date ultimoLogin;
     private Set<Papel> papels = new HashSet(0);
     public static final int PAPEL_PROFESSOR = 3;
     public static final int PAPEL_ALUNO = 4;
     public static final int PAPEL_CADASTRO = 2;
     public static final int PAPEL_ADMINSTRADOR = 1;

    public Usuario() {
    }

	
    public Usuario(Pessoa pessoa) {
        this.pessoa = pessoa;
    }
    public Usuario(Pessoa pessoa, String login, String senha, Boolean ativo, Date ultimoLogin, Set<Papel> papels) {
       this.pessoa = pessoa;
       this.login = login;
       this.senha = senha;
       this.ativo = ativo;
       this.ultimoLogin = ultimoLogin;
       this.papels = papels;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idUsuario", unique=true, nullable=false)
    public Integer getIdUsuario() {
        return this.idUsuario;
    }
    
    public void setIdUsuario(Integer idUsuario) {
        this.idUsuario = idUsuario;
    }

@ManyToOne(fetch=FetchType.EAGER)
    @JoinColumn(name="idPessoa", nullable=false)
    public Pessoa getPessoa() {
        return this.pessoa;
    }
    
    public void setPessoa(Pessoa pessoa) {
        this.pessoa = pessoa;
    }

    
    @Column(name="login", length=45)
    public String getLogin() {
        return this.login;
    }
    
    public void setLogin(String login) {
        this.login = login;
    }

    
    @Column(name="senha", length=45)
    public String getSenha() {
        return this.senha;
    }
    
    public void setSenha(String senha) {
        this.senha = senha;
    }

    
    @Column(name="ativo")
    public Boolean getAtivo() {
        return this.ativo;
    }
    
    public void setAtivo(Boolean ativo) {
        this.ativo = ativo;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="ultimoLogin", length=19)
    public Date getUltimoLogin() {
        return this.ultimoLogin;
    }
    
    public void setUltimoLogin(Date ultimoLogin) {
        this.ultimoLogin = ultimoLogin;
    }

@ManyToMany(fetch=FetchType.EAGER)
    @JoinTable(name="usuario_papel", catalog="kemdixip_sgeda", joinColumns = { 
        @JoinColumn(name="usuario_idUsuario", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="papel_idPapel", nullable=false, updatable=false) })
    public Set<Papel> getPapels() {
        return this.papels;
    }
    
    public void setPapels(Set<Papel> papels) {
        this.papels = papels;
    }

 @Transient
    public boolean isAdministrador(){
        for(Papel papel: papels){
            if(papel.getIdPapel() == PAPEL_ADMINSTRADOR) return true;
        }
        return false;
    }
    
    @Transient
    public boolean isAluno(){
        boolean aluno = false;
        boolean adm = false;
        for(Papel papel: papels){
            if(papel.getIdPapel() == PAPEL_ALUNO) aluno = true;
            if(papel.getIdPapel() == PAPEL_ADMINSTRADOR) adm = true;
        }
        return !adm && aluno;
    }
    
    @Transient
    public boolean isProfessor(){
        boolean professor = false;
        boolean adm = false;
        for(Papel papel: papels){
            if(papel.getIdPapel() == PAPEL_PROFESSOR) professor = true;
            if(papel.getIdPapel() == PAPEL_ADMINSTRADOR) adm = true;
        }
        return !adm && professor;
    }
    
    @Transient
    public boolean isCadastro(){
        boolean cadastro = false;
        boolean adm = false;
        for(Papel papel: papels){
            if(papel.getIdPapel() == PAPEL_CADASTRO) cadastro = true;
            if(papel.getIdPapel() == PAPEL_ADMINSTRADOR) adm = true;
        }
        return !adm && cadastro;
    }


}


