package entidade;
// Generated 22/08/2016 17:01:00 by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Disciplina generated by hbm2java
 */
@Entity
@Table(name="disciplina"
    ,catalog="sgeda"
)
public class Disciplina  implements java.io.Serializable {


     private Integer idDisciplina;
     private String nome;
     private String descricao;
     private Set subdisciplinas = new HashSet(0);
     private Set cursos = new HashSet(0);
     private Set turmas = new HashSet(0);
     private Set professors = new HashSet(0);
     private Set questaos = new HashSet(0);

    public Disciplina() {
    }

    public Disciplina(String nome, String descricao, Set subdisciplinas, Set cursos, Set turmas, Set professors, Set questaos) {
       this.nome = nome;
       this.descricao = descricao;
       this.subdisciplinas = subdisciplinas;
       this.cursos = cursos;
       this.turmas = turmas;
       this.professors = professors;
       this.questaos = questaos;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idDisciplina", unique=true, nullable=false)
    public Integer getIdDisciplina() {
        return this.idDisciplina;
    }
    
    public void setIdDisciplina(Integer idDisciplina) {
        this.idDisciplina = idDisciplina;
    }

    
    @Column(name="nome")
    public String getNome() {
        return this.nome;
    }
    
    public void setNome(String nome) {
        this.nome = nome;
    }

    
    @Column(name="descricao")
    public String getDescricao() {
        return this.descricao;
    }
    
    public void setDescricao(String descricao) {
        this.descricao = descricao;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="disciplina")
    public Set getSubdisciplinas() {
        return this.subdisciplinas;
    }
    
    public void setSubdisciplinas(Set subdisciplinas) {
        this.subdisciplinas = subdisciplinas;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="curso_has_disciplina", catalog="sgeda", joinColumns = { 
        @JoinColumn(name="disciplina_idDisciplina", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="curso_idCurso", nullable=false, updatable=false) })
    public Set getCursos() {
        return this.cursos;
    }
    
    public void setCursos(Set cursos) {
        this.cursos = cursos;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="disciplina")
    public Set getTurmas() {
        return this.turmas;
    }
    
    public void setTurmas(Set turmas) {
        this.turmas = turmas;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="professor_habilitado_disciplina", catalog="sgeda", joinColumns = { 
        @JoinColumn(name="disciplina_idDisciplina", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="professor_idProfessor", nullable=false, updatable=false) })
    public Set getProfessors() {
        return this.professors;
    }
    
    public void setProfessors(Set professors) {
        this.professors = professors;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="questao_has_disciplina", catalog="sgeda", joinColumns = { 
        @JoinColumn(name="disciplina_idDisciplina", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="questao_idQuestao", nullable=false, updatable=false) })
    public Set getQuestaos() {
        return this.questaos;
    }
    
    public void setQuestaos(Set questaos) {
        this.questaos = questaos;
    }




}


