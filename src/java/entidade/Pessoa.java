package entidade;
// Generated 22/08/2016 17:01:00 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * Pessoa generated by hbm2java
 */
@Entity
@Table(name="pessoa"
    ,catalog="sgeda"
    , uniqueConstraints = {@UniqueConstraint(columnNames="cpf"), @UniqueConstraint(columnNames="matricula")} 
)
public class Pessoa  implements java.io.Serializable {


     private Integer idPessoa;
     private String cpf;
     private String matricula;
     private String nome;
     private Date dataNascimento;
     private String sexo;
     private Date dataCadastro;
     private String email;
     private Set<Telefone> telefones;
     private Endereco endereco;

    public Pessoa() {
    }

	
    public Pessoa(String cpf, String matricula) {
        this.cpf = cpf;
        this.matricula = matricula;
    }
    public Pessoa(String cpf, String matricula, String nome, Date dataNascimento, String sexo, Date dataCadastro, String email, Set telefones, Professor professor, Aluno aluno, Endereco endereco, Funcionario funcionario) {
       this.cpf = cpf;
       this.matricula = matricula;
       this.nome = nome;
       this.dataNascimento = dataNascimento;
       this.sexo = sexo;
       this.dataCadastro = dataCadastro;
       this.email = email;
       this.telefones = telefones;
       this.endereco = endereco;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idPessoa", unique=true, nullable=false)
    public Integer getIdPessoa() {
        return this.idPessoa;
    }
    
    public void setIdPessoa(Integer idPessoa) {
        this.idPessoa = idPessoa;
    }

    
    @Column(name="cpf", unique=true, nullable=false, length=11)
    public String getCpf() {
        return this.cpf;
    }
    
    public void setCpf(String cpf) {
        this.cpf = cpf;
    }

    
    @Column(name="matricula", unique=true, nullable=false, length=25)
    public String getMatricula() {
        return this.matricula;
    }
    
    public void setMatricula(String matricula) {
        this.matricula = matricula;
    }

    
    @Column(name="nome")
    public String getNome() {
        return this.nome;
    }
    
    public void setNome(String nome) {
        this.nome = nome;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dataNascimento", length=19)
    public Date getDataNascimento() {
        return this.dataNascimento;
    }
    
    public void setDataNascimento(Date dataNascimento) {
        this.dataNascimento = dataNascimento;
    }

    
    @Column(name="sexo", length=2)
    public String getSexo() {
        return this.sexo;
    }
    
    public void setSexo(String sexo) {
        this.sexo = sexo;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dataCadastro", length=19)
    public Date getDataCadastro() {
        return this.dataCadastro;
    }
    
    public void setDataCadastro(Date dataCadastro) {
        this.dataCadastro = dataCadastro;
    }

    
    @Column(name="email", length=80)
    public String getEmail() {
        return this.email;
    }
    
    public void setEmail(String email) {
        this.email = email;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="pessoa")
    public Set<Telefone> getTelefones() {
        return this.telefones;
    }
    
    public void setTelefones(Set telefones) {
        this.telefones = telefones;
    }


@OneToOne(fetch=FetchType.LAZY, mappedBy="pessoa")
    public Endereco getEndereco() {
        return this.endereco;
    }
    
    public void setEndereco(Endereco enderecos) {
        this.endereco = enderecos;
    }

}


