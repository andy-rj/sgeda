package entidade;
// Generated 22/08/2016 17:01:00 by Hibernate Tools 4.3.1


import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * AlunoHasTurma generated by hbm2java
 */
@Entity
@Table(name="aluno_has_turma"
    ,catalog="sgeda"
)
public class AlunoHasTurma  implements java.io.Serializable {


     private AlunoHasTurmaId id;
     private Aluno aluno;
     private Turma turma;
     private Date dataIncricao;
     private Boolean aprovado;
     private Set<Curso> cursos;

    public AlunoHasTurma() {
    }

	
    public AlunoHasTurma(AlunoHasTurmaId id, Aluno aluno, Turma turma) {
        this.id = id;
        this.aluno = aluno;
        this.turma = turma;
    }
    public AlunoHasTurma(AlunoHasTurmaId id, Aluno aluno, Turma turma, Date dataIncricao, Boolean aprovado, Set cursos) {
       this.id = id;
       this.aluno = aluno;
       this.turma = turma;
       this.dataIncricao = dataIncricao;
       this.aprovado = aprovado;
       this.cursos = cursos;
    }
   
     @EmbeddedId

    
    @AttributeOverrides( {
        @AttributeOverride(name="alunoIdAluno", column=@Column(name="aluno_idAluno", nullable=false) ), 
        @AttributeOverride(name="turmaIdTurma", column=@Column(name="turma_idTurma", nullable=false) ), 
        @AttributeOverride(name="turmaIdDisciplina", column=@Column(name="turma_idDisciplina", nullable=false) ) } )
    public AlunoHasTurmaId getId() {
        return this.id;
    }
    
    public void setId(AlunoHasTurmaId id) {
        this.id = id;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="aluno_idAluno", nullable=false, insertable=false, updatable=false)
    public Aluno getAluno() {
        return this.aluno;
    }
    
    public void setAluno(Aluno aluno) {
        this.aluno = aluno;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumns( { 
        @JoinColumn(name="turma_idTurma", referencedColumnName="idTurma", nullable=false, insertable=false, updatable=false), 
        @JoinColumn(name="turma_idDisciplina", referencedColumnName="idDisciplina", nullable=false, insertable=false, updatable=false) } )
    public Turma getTurma() {
        return this.turma;
    }
    
    public void setTurma(Turma turma) {
        this.turma = turma;
    }

    @Temporal(TemporalType.TIMESTAMP)
    @Column(name="dataIncricao", length=19)
    public Date getDataIncricao() {
        return this.dataIncricao;
    }
    
    public void setDataIncricao(Date dataIncricao) {
        this.dataIncricao = dataIncricao;
    }

    
    @Column(name="aprovado")
    public Boolean getAprovado() {
        return this.aprovado;
    }
    
    public void setAprovado(Boolean aprovado) {
        this.aprovado = aprovado;
    }

@ManyToMany(fetch=FetchType.LAZY)
    @JoinTable(name="aluno_has_turma_has_curso", catalog="sgeda", joinColumns = { 
        @JoinColumn(name="aluno_has_turma_aluno_idAluno", nullable=false, updatable=false), 
        @JoinColumn(name="aluno_has_turma_turma_idTurma", nullable=false, updatable=false), 
        @JoinColumn(name="aluno_has_turma_turma_idDisciplina", nullable=false, updatable=false) }, inverseJoinColumns = { 
        @JoinColumn(name="curso_idCurso", nullable=false, updatable=false) })
    public Set<Curso> getCursos() {
        return this.cursos;
    }
    
    public void setCursos(Set cursos) {
        this.cursos = cursos;
    }




}


